/*
    Power Platform Landing Zones ARM template.
    This template will in concert with the portal extension provision and bootstrap 1) Azure infrastructure as prerequisite for monitoring, logging, and security,
    and the initial Admin environments for Power Platform, to construct and operationalize landing zones for citizen - and professional developers.
*/
{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "finOpsIdentity": {
            "type": "string",
            "metadata": {
                "description": "Provide the resourceId of the User Managed Identity."
            }
        },
        "finOpsEnv": {
            "type": "string",
            "defaulValue": "",
            "metadata": {
                "description": "Provide strings for custom citizen Environment creation."
            }
        }
    },
    "variables": {
        "deploymentUris": {
            "ppRpRegistrationTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/powerPlatform/rpRegistrations.json')]",
            "logAnalyticsTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/azureMonitor/logAnalytics.json')]",
            "aadDiagnosticsTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/azureMonitor/aadDiagnostics.json')]",
            "dataLakeTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/azureMonitor/storageAccountV2.json')]",
            "securityTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/azureMonitor/security.json')]",
            "northStarTemplateUri": "[uri(deployment().properties.templateLink.uri, 'auxiliary/powerPlatform/ppDeploymentScript.json')]"
        },
        "deploymentNamePrefix": "[concat(replace(tenant().displayName, ' ', ''), '-')]",
        "deploymentNameSuffix": "[concat('-', deployment().location, guid(parameters('ppAdminEnvNaming')))]",
        "deploymentNames": {
            "ppRegistrationDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-RP-Billing', variables('deploymentNameSuffix')), 64)]",
            "logAnalyticsDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-Azure-Monitoring', variables('deploymentNameSuffix')), 64)]",
            "aadDiagnosticsDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-Star-AAD-Logs', variables('deploymentNameSuffix')), 64)]",
            "dataLakeDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-DataLake-Analytics', variables('deploymentNameSuffix')), 64)]",
            "securityDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-Sentinel', variables('deploymentNameSuffix')), 64)]",
            "northStarDeploymentName": "[take(concat(variables('deploymentNamePrefix'), 'PPLZ-Setup', variables('deploymentNameSuffix')), 64)]"
        },
        "resourceNamePrefix": "PPLZ",
        "rgNames": {
            "mgmtRg": "[concat(variables('resourceNamePrefix'), '-mgmt-', parameters('location'))]",
            "billingRg": "[concat(variables('resourceNamePrefix'), '-billing-', parameters('location'))]",
            "analyticsRg": "[concat(variables('resourceNamePrefix'), '-analytics-', parameters('location'))]"
            },
        // Declaring deterministic names for platform resources that will be created
        "resourceNames": {
            "logAnalyticsWorkspace": "[concat(variables('resourceNamePrefix'), '-law-', parameters('location'))]",
            "automationAccount": "[concat(variables('resourceNamePrefix'), '-aauto-', parameters('location'))]",
            "storageAccount": "[take(toLower(concat('ns', uniqueString(subscription().subscriptionId))), 23)]"
            },
        "resourceIds": {
            "logAnalyticsResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('rgNames').mgmtRg, '/providers/Microsoft.OperationalInsights/workspaces/', variables('resourceNames').logAnalyticsWorkspace)]"
        },
        "emptyString": "''"
    },
    "resources": [
        {
            // Deploying the North Star Power Platform script (Power Platform Landing Zones)
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "FinOpsARMTemplate",
            "location": "[deployment().location]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('deploymentUris').northStarTemplateUri]"
                },
                "parameters": {
                    "finOpsIdentity": {
                        "value": "[parameters('finOpsIdentity')]"
                    },
                    "finOpsEnv": {
                        "value": "[if(empty(parameters('finOpsEnv')), variables('emptyString'), parameters('finOpsEnv'))]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deployment": {
            "type": "string",
            "value": "[concat(deployment().name, ' has successfully deployed. Welcome to FinOps!')]"
        }
    }
}